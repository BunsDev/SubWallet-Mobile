export const vi = {
  common: {
    welcomeBack: 'Welcome Back!',
    enterPinToUnlock: 'Enter PIN to unlock',
    addOrConnectAccount: 'Add / Connect Account',
    createNewWalletAccount: 'Create a new account',
    importExistingWallet: 'Import an existing account',
    firstScreenNotification: 'By continuing, you agree to our Terms and Privacy Policy',
    createWalletName: 'Create A New Account',
    createWalletNotification: 'Your wallet name will only be used locally in this application. You can edit it later.',
    importPrivateKey: 'Import Private Key',
    selectSendingMethod: 'Select Sending Method',
    connectYourAccount: 'Connect Your Account',
    secretPhrase: 'Secret Phrase',
    privateKey: 'Private Key',
    jsonFile: 'JSON file',
    singleChain: 'Single Chain',
    crossChain: 'Cross Chain (XCM)',
    charityDonate: 'Charity Donation',
    selectYourImport: 'Select Your Import',
    autoLock: 'Auto-Lock',
    transferSuccessMessage:
      'Your request has been confirmed. You can track its progress on the Transaction History page.',
    transferFailMessage1:
      'There was a problem with your request. You can track its progress on the Transaction History page.',
    transferFailMessage2: 'There was a problem with your request.',
    selectQrCodeFromGallery: 'Select Qr Code from Gallery',
    notify: 'Notification!',
    cannotScanQRCodeWithoutPermission: 'Please grant Camera access to scan QR code',
    goToSetting: 'Go to Setting',
    scan: 'Scan',
    toSendFund: 'to send fund',
    emptyTransactionListMessage: 'Your transactions will appear here',
    emptyCrowdloanListMessage: 'Your crowdloan projects will appear here',
    emptyBrowserMessage: 'Type a URL or search the web',
    emptyBrowserTabsMessage: 'Your browsing tabs will appear here',
    copyToClipboard: 'Copy to Clipboard',
    copiedToClipboard: 'Copied to Clipboard',
    continue: 'Continue',
    verifySecretPhraseMessage:
      'Fill in the words in the correct order to prove that you have saved your secret phrase.',
    firstScreenMessage: 'By continuing, you agree to our Terms & Conditions and Privacy Policy',
    network: 'Network',
    account: 'Account',
    sendFromAddress: 'Send from Address',
    sendToAddress: 'Send to Address',
    networkFee: 'Network Fee',
    password: 'Password',
    backToHome: 'Back to home',
    resend: 'Resend',
    cancel: 'Cancel',
    pinCode: 'PIN Code',
    newPinCode: 'New PIN Code',
    repeatPinCode: 'Repeat PIN Code',
    done: 'Done',
    accountName: 'Account Name',
    accountAddress: 'Account Address',
    passwordForThisAccount: 'Password For This Account',
    importAccount: 'Import Account',
    remove: 'Remove',
    walletPassword: 'Wallet Password',
    repeatWalletPassword: 'Repeat Wallet Password',
    tapToRevealPrivateKey: 'Tap to reveal your private key',
    viewPrivateKeyTitle: 'Make sure no one is watching your screen',
    walletName: 'Wallet Name',
    explorer: 'Explorer',
    share: 'Share',
    faceId: 'Face ID',
    changeYourPinCode: 'Change Your PIN Code',
    manageDAppAccess: 'Manage DApp Access',
    appLock: 'App Lock',
    viewInExplorer: 'View in Explorer',
    finish: 'Finish',
    send: 'Send',
    ok: 'OK',
    reloadBackground: 'Reload Background',
    status: 'Status: ',
    url: 'URL: ',
    version: 'Version: ',
    subscribing: '................... Subscribing .................',
    sendMessage: 'Send Message',
    allAccounts: 'All Accounts',
    inputFileLabel: 'Paste your JSON file',
    message: 'Message',
    input: 'Input',
    max: 'Max',
    fee: 'Fee:',
    transferable: 'Transferable: ',
    receiveModalText: 'Scan address to receive payment',
    importSecretPhraseTitle: 'Restore an existing wallet account with your 12 or 24-word secret recovery phrase',
    comingSoon: 'Coming Soon',
    win: 'Win',
    fail: 'Fail',
    active: 'Active',
    search: 'Search',
    searchPlaceholder: 'Search or enter website',
    apply: 'Apply',
    anErrorHasOccurred: 'An error has occurred.',
    chooseAccount: 'Choose the account(s) youâ€™d like to connect',
    connect: 'Connect',
    favorites: 'Favorites',
    history: 'History',
    openInBrowser: 'Open in browser',
    removeFromFavourites: 'Remove from favourites',
    addToFavourites: 'Add to favourites',
    searchAtDuckDuckGo: 'Search At DuckDuckGo',
    searchResult: 'Search Result',
    seeAll: 'See All',
    historyEmptyListPlaceholder: 'Your history will appear here',
    favouritesEmptyListPlaceholder: 'Your favourites will appear here',
    approve: 'Approve',
    metadataIsOutOfDate: 'Your metadata is out of date',
    selectAll: 'Select All',
    symbol: 'Symbol',
    decimals: 'Decimals',
    defaultReceiveAccountName: 'Received Account / Contract Address',
    info: 'Info',
    hexData: 'Hex data',
    detail: 'Detail',
    data: 'Data',
    method: 'Method',
    arguments: 'Arguments',
    amount: 'Amount',
    estimateGas: 'Estimate Gas',
    sign: 'Sign',
    rawData: 'Raw Data',
    signMethod: 'Sign Method',
    from: 'From',
    genesis: 'Genesis',
    versionLabel: 'Version',
    nonce: 'Nonce',
    tip: 'Tip',
    lifetime: 'Lifetime',
    bytes: 'Bytes',
    immortal: 'immortal',
    immortalValidFrom: 'mortal, valid from',
    to: 'to',
    close: 'Close',
    viewDetail: 'View Detail',
    on: 'on',
    approveRequestTitle: 'You are approving a request with account',
    block: 'Block',
    unblock: 'Unblock',
    forgetAll: 'Forget All',
    disconnectAll: 'Disconnect All',
    connectAll: 'Connect All',
    forgetSite: 'Forget Site',
    noDAppAvailable: 'No DApp available',
    noAccountAvailableForThisDApp: 'No account available for this DApp',
    received: 'Received',
    confirm: 'Confirm',
    viewTransaction: 'View Transaction',
    transferNFTSuccessfullyMessage:
      'Your transfer request has been confirmed. It might take a minute to see changes in your wallet.',
    transferNFTFailedMessage: 'There was a problem with your request. You can try again.',
    address: 'address',
    toImportNFT: 'to import NFT',
    toImportToken: 'to import token',
    toSendNFT: 'to send NFT',
    approveRequestMessage: 'Only approve this request if you trust the app',
    approveTransactionMessage: 'You are approving a request send transaction',
    reject: 'Reject',
    closeAll: 'Close All',
    enterYourPrivateKey: 'Enter your private key',
    tokenType: 'Token Type',
    save: 'Save',
    addToken: 'Add Token',
    edit: 'Edit',
    importTokenSuccessMessage: 'Your changes are saved successfully',
    deleteToken: 'Delete Token',
    importToken: 'Import Token',
    emptyChainListMessage: 'Your chain will appear here',
    emptyTokenListMessage: 'Your token will appear here',
    customNetwork: 'Custom Network',
    manageTokenList: 'Manage Token List',
    noEvmChainAvailable: 'No EVM chain available',
    addNftSuccess: 'Successfully added a NFT collection',
  },
  title: {
    yourSecretPhrase: 'Your Secret Phrase',
    verifySecretPhrase: 'Verify Your Secret Phrase',
    nameYourWallet: 'Name Your Wallet',
    sendFund: 'Send fund',
    security: 'Security',
    selectAccount: 'Select Account',
    selectAccountType: 'Select Account Type',
    settings: 'Settings',
    languages: 'Languages',
    accounts: 'Accounts',
    editAccount: 'Edit Account',
    exportJson: 'Export JSON',
    importEVMPrivateKey: 'Import EVM Private Key',
    importByPrivateKey: 'Import By Private Key',
    importSecretPhrase: 'Import Secret Phrase',
    importBySecretPhrase: 'Import By Secret Phrase',
    networkSetting: 'Network Setting',
    removeAccount: 'Remove Account',
    importFromJson: 'Import By JSON File',
    selectToken: 'Select Token',
    exportPrivateKey: 'Export Private Key',
    selectNetwork: 'Select Network',
    chain: 'Chain',
    token: 'Token',
    history: 'History',
    qrScanner: 'QR Scanner',
    selectUnit: 'Select unit',
    filters: 'Filters',
    nftCollections: 'Your Collectibles',
    nftList: 'NFT List',
    nftDetail: 'NFT Detail',
    importEvmNft: 'Import EVM NFT',
    transferNft: 'Transfer NFT',
    authorizeTransaction: 'Authorize transaction',
    metadataTitlePart1: 'Approving this update will sync your metadata for the',
    metadataTitlePart2: 'chain from',
    authorizeRequestTitle: 'Approve Request',
    phishingDetected: 'Phishing Detected',
    requestToSignMessage: 'Request to sign message',
    requestToSendPayload: 'Request to send payload',
    manageDAppAccess: 'Manage DApp Access',
    moreOptions: 'More Options',
    scanQrCode: 'Scan QR Code',
    transferNFTSuccessfully: 'Transfer NFT Successfully',
    transferNFTFailed: 'Transfer NFT Failed',
    sendTransaction: 'Send Transaction',
    configureEvmToken: 'Configure EVM Token',
    importEvmToken: 'Import EVM Token',
    network: 'Network',
    receiveAsset: 'Receive Asset',
    chainSelect: 'Chain Select',
  },
  tabName: {
    crypto: 'Crypto',
    nft: 'NFT',
    crowdloans: 'Crowdloans',
    staking: 'Staking',
    browser: 'Browser',
  },
  cryptoScreen: {
    receive: 'Receive',
    send: 'Send',
    swap: 'Swap',
  },
  nftScreen: {
    nftAppearHere: 'Your NFTs will appear here',
    dontSeeNft: "Don't see your NFTs?",
    importNft: 'Import NFTs',
    nftDetail: {
      description: 'Description',
      rarity: 'Rarity',
      properties: 'Properties',
      resourcesOrInventory: 'Resources or Inventory',
      collectionName: 'Collection Name',
      ownedBy: 'Owned by',
      createdBy: 'Created by',
    },
  },
  importEvmNft: {
    smartContract: 'NFT Contract Address (*)',
    chain: 'Chain (*)',
    nftCollectionName: 'NFT Collection Name (*)',
    cancel: 'Cancel',
    addNft: 'Add NFT',
  },
  importEvmToken: {
    contractAddress: 'Contract Address',
    tokenName: 'Token Name',
    chain: 'Chain',
  },
  transferNft: {
    send: 'Send',
    nft: 'NFT',
    chain: 'Chain',
    signAndSubmit: 'Sign and Submit',
  },
  settings: {
    notifications: 'Notifications',
    network: 'Network',
    manageTokens: 'Manage Tokens',
    telegram: 'Telegram',
    twitter: 'Twitter',
    discord: 'Discord',
    website: 'Website',
    documentation: 'Documentation',
    termOfService: 'Terms of Service',
    privacyPolicy: 'Privacy Policy',
    webViewDebugger: 'Web View Debugger',
    logout: 'Logout',
    exportPrivateKey: 'Export Private Key',
    immediately: 'Immediately',
    ifLeftFor15Seconds: 'If left for 15 seconds',
    ifLeftFor30Seconds: 'If left for 30 seconds',
    ifLeftFor1Minute: 'If left for 1 minute',
    ifLeftFor5Minutes: 'If left for 5 minutes',
    ifLeftFor15Minutes: 'If left for 15 minutes',
    ifLeftFor30Minutes: 'If left for 30 minutes',
    ifLeftFor1Hour: 'If left for 1 hour',
    whenCloseApp: 'When close app',
    networkAndAssets: 'Networks & Assets',
    communityAndSupport: 'Community & Support',
    about: 'About',
  },
  warningTitle: {
    doNotSharePrivateKey: 'Do not share your private key!',
    doNotShareSecretPhrase: 'Do not share your secret phrase!',
    doNotShareJsonFile: 'Do not share your JSON file!',
    warning: 'Warning',
    error: 'Error!',
    clearHistory: 'Clear History',
  },
  warningMessage: {
    passwordTooShort: 'Password is too short',
    noTokenAvailable: 'No Token Available',
    noNetworkAvailable: 'No Network Available',
    noAccountText: "You currently don't have any accounts. Create your first account to get started.",
    privateKeyWarning: 'If someone has your private key they will have full control of your account',
    secretPhraseWarning: 'If someone gets access to your secret phrase they will have full control of your account',
    unableDecode: 'Unable to decode using the supplied passphrase',
    invalidJsonFile: 'Invalid Json file',
    noPasswordMessage: 'Please fill repeat password',
    doNotMatchPasswordWarning: 'Passwords do not match',
    isNotSameAddress: 'The recipient address is the same as the sender address.',
    recipientPhish: 'The recipient is associated with a known phishing site on',
    isNotSameAddressAndTokenType: 'Transfer is not supported for this type of account and token',
    recipientAddressMustBe: 'The recipient address must be ',
    invalidEVMPrivateKey: 'Invalid EVM private key',
    removeAccountWarning:
      'You are about to remove this account. This means that you will not able to access it via this application any more. If you wish to recover it, you will need to use the secret phrase.',
    initSecretPhrase: 'You will lose your assets if you lose your secret phrase.',
    exportAccountWarning: "You are exporting your account. Keep it safe and don't share it with anyone.",
    noAccountMessage: "There's no account at the moment",
    requireMessage: 'This field is required',
    notSupportTransferMessage: 'The transfer for the current token is not supported',
    noEvmAccountMessage: "You don't have any evm account. Please create, import or restore an account to continue",
    noSubstrateAccountMessage:
      "You don't have any substrate account. Please create, import or restore an account to continue",
    trustSiteMessage: 'Make sure you trust this site before connecting',
    ethSignWarningMessage:
      "Signing this message can be dangerous. This signature could potentially perform any operation on your account's behalf, including granting complete control of your account and all of its assets to the requesting site. Only sign this message if you know what you're doing or completely trust the requesting site.",
    clearHistoryWarningMessage: 'Make sure you want to clear all history',
    phishingMessage:
      'This site is blocked because the Subwallet app believes that this website could compromise the security of your accounts and your tokens.',
  },
  errorMessage: {
    wrongPassword: 'Wrong password',
    invalidMnemonicSeed: 'Invalid mnemonic seed',
    invalidAddress: 'Invalid address',
    transferNFTBalanceError: 'Your balance is too low to cover fees',
    transferNFTTxError: 'Encountered an error, please try again.',
    transferNFTError: 'Some error occurred. Please try again later.',
    occurredError: 'An error has occurred. Please try again later',
    invalidEvmContractAddress: 'Invalid EVM contract address',
    tokenAlreadyAdded: 'This token has already been added',
    invalidContractForSelectedChain: 'Invalid contract for the selected chain',
    noTokenAvailable: 'No Token Available',
  },
};
